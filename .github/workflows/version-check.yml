name: My Tool Kit Dependencies Check

on:
  pull_request:
  push:
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Version Check
        if: ${{ success() }}
        id: version_check
        continue-on-error: true        # 이 스텝만 실패해도 워크플로우는 통과
        run: |
          ./gradlew checkCommonModuleDependencies \
            -Pgpr.user=${{ github.actor }} \
            -Pgpr.key=${{ secrets.GIT_PASSWORD }} \
            | tee version-check.log

      - name: Parse Version Warnings
        if: ${{ success() }}
        id: parse
        run: |
          if grep -q "⚠️" version-check.log; then
            echo "outdated=true" >> $GITHUB_OUTPUT
          else
            echo "outdated=false" >> $GITHUB_OUTPUT
          fi

      - name: Notify Slack if Outdated
        if: steps.parse.outputs.outdated == 'true'
        uses: slackapi/slack-github-action@v2.0.0
        with:
          # GitHub Secret에 저장해둔 Incoming Webhook URL
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          # 필수! 'incoming-webhook' 또는 'webhook-trigger' 중 하나
          webhook-type: incoming-webhook
          # 보낼 메시지 페이로드
          payload: |
            {
              "text": ":warning: *Common-module 버전 불일치 감지*",
              "attachments": [
                {
                  "color": "#ff0000",
                  "title": "${{ github.repository }} - Version Check",
                  "text": "$(grep '⚠️' version-check.log | sed 's/\"/\\\"/g')",
                  "mrkdwn_in": ["text"]
                }
              ]
            }


      - name: Cleanup Gradle Cache
        if: ${{ always() }}
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
